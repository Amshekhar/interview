Q1. What is React? What is the role of React in software development?  
Ans:
1. React is an open source javascript library.
2. React is used to building user interfaces(UI).
3. React is simplifies the creation of SPA(Single Page Application) by using reusable components.

Q2. What are the key features of React?
Ans: React has seven main keyfeature:
Virtual DOM: React uses a Virtual DOM for efficient updates, only modifying changed parts in the real DOM instead of re-rendering the entire UI.

Component-Based Architecture: React applications are built using reusable components, making it easy to structure, organize, and maintain complex UIs.

Reusability & Composition: Components can be reused across different parts of an application, and they can be composed together to build complex UIs from simple parts.

JSX (JavaScript XML): JSX is a syntax extension that combines JavaScript and HTML-like code, making it easier to write and visualize the UI structure directly within JavaScript.

Declarative Syntax: React’s syntax is declarative, meaning you describe what the UI should look like, and React takes care of updating the DOM based on changes in data.

Community and Ecosystem: React has a large, active community and ecosystem, offering extensive libraries, tools, and resources that make development faster and more powerful.

React Hooks: Hooks are special functions that enable functional components to use features like state and lifecycle methods, enhancing component functionality and code simplicity.

Q3. What is DOM? What is the difference b/w DOM and HTML?
Ans:
DOM: Document Object Model(DOM) represent the page as a tree-like structure. which allows javascript to dynamically access and manipulate the content and structure of a webpage.
HTML: HTML is a markup language. which is helpfull for developers for reading and development perpose.

Note: Memory always plays with DOM not with HTML.

Q4. What is Virtual DOM? Differense between Virtual and Real DOM?
Ans: The Virtual DOM in React is a lightweight representation of the real DOM. When a component’s state or props change, React creates an updated Virtual DOM and compares it to the previous one to identify changes. This process, called reconciliation, allows React to update only the changed parts in the real DOM, making updates faster and more efficient without re-rendering the entire page.

During reconciliation, React uses a "diffing algorithm" to detect changes between the previous and updated Virtual DOM versions. React then updates only the necessary parts of the Real DOM based on these differences, ensuring efficient and minimal updates.

Q5. What are the React component? What are the main elements of it?
Ans:
React components are the building blocks of a React application. They are reusable, independent pieces of UI, like buttons, forms, or entire sections of a webpage. Components can be thought of as JavaScript functions or classes that return HTML elements.

Q6. What is SPA(Single Page Application)?
Ans:
Single Page Application(SPA) is a web application that have only one single web page. whenever user do some action on the website then in response content is dynamically updated without refreshing or reloading new page. 

Q7. What are the Five advantages of the React?
Ans:
1. Easy to build Single page application by using component based architecture.
2. React is cross platform and open source (Free to use).
3. Lightweight and very fast because of Virtual Dom advantage 
4. Large Community and Ecosyatem, by which we can easily found multiple artical and tutorials on the internet to understand the things or clear the doubts.
5. Testing is easy, on UI applications.

Q8. What is the disadvantage of React?
Ans: React is a good choice for the multiple component based or dynamic web application. So React is not good choice for the small application, in that case we should use HTML, CSS and JS.

Q9. What is the role of JSX in React? 3 Points
Ans:
1. JSX stands for javascript XML
2. JSX is used by React to write the HTML-like-code3.
3. JSX is converted to JavaScript via tool like Bable (Because browser only understand HTML, CSS and JS not JSX)

Q10. What is the difference b/w declarative and Imperative Syntax?
Ans:
Declarative syntax is used in React by using JSX.
Imperative syntax is write by using pure JavaScript.

Q11. How React App load and display the components ib browser?
Ans: First of all a user load the UI in the browser then the request flows in this way>>
    USER => Index.html => Index.js => App.js => Components

    index.html - Single page which loads index.js by React libraries
    index.js - Replace root elements of index.html file by App component
    App.js - Root component which is the container of all child components.
    ChildComponents - Custom child components placed over app component.

Q12. What is the diff between React and Angular?
Ans:
    Common point => React and Angular both are used to create the single page UI application using components.

    React => 
    1. React is a JavaScript library.
    2. React uses a Virtual DOM, which  make it faster.
    3. React is smaller in size and lightweight and therefor faster sometime.
    4. React depands on external libraries for complax features, so developers have to write many lines of code for complax functions.
    5. React is simple to learn and more populer than Angular.

    Angular =>
    1. Angular is complete farmework.
    2. Angular use Real DOM.
    3. Angular is bigger because it is a complete farmework.
    4. Since Angular is a complete farmework, therefor it provide some built-in support for features like routing, forms, validation and HTTPS requests.
    5. Angular is slightly difficult to learn as it has Typescript, OOPs concepts and many more things.

Q13. How React provides Reusability and Composition?
Ans:
    Reusability: Once you create the component in React then you can re-use it in different parts of your application or even in multiple projects.

    Composition: Composition is creating new and big components by combining existing small components. its advantage is, change to one small component will not impact other components. 
             
Q14. What is state, stateless, stateful and state management?
Ans:
    "State" refer to the current data of the component.
    Stateful or state management means, when a user perform some action on the UI, then react application should be able to update and re-rander the data or state on the UI.

Q15. What are the "props" in JSX?
Ans: "props" (properties) are a way to pass the data from a parant component to the child component.

Q16. What is NPM? What is the role of node_module folder?
Ans:
    NPM (Node Package Manager) is used to manage the dependencies for your React Project, including the React Library itself.

    node_module folder contains all the dependencies of the Project, including the React Libraries.

Q16: What is the role of index.html page in React?
Ans:
    index.html file is the main HTML file in (SPA) application.

    The div with "id = root" will be replaced by the component inside index.js file.

Q17. What is the role of index.js file and ReactDOM in React?
Ans: 
    # The index.js file is the JavaScript file that replaces the root element of the index.html file with the newly rendered components.
    # ReactDOM is a JavaScript library thet renders components to the DOM or browser.

Q18. What is the role od App.js file in React?
Ans: 
    App.js file contains the root component App of React application.
    App component is like a container for other Components.
    App.js defines the structure, layout and routing in the application.

Q19. What are the advantage of JSX?
Ans: 
    1. Improve code readability and writability.
    2. Error checking in advance (Type safety).
    3. Support JavaScript expression.
    4. Improved performance
    5. Code Reusability.

Q20. What is the role of Fragment in JSX?
Ans:
    In React a Fragment is a way to group multiple children's elements.
    Using a Fragment prevents the addition of unnecessary nodes to the DOM. 

Q21. What is Spread  Operator in JSX?
Ans: The Spread Operator (...) is used to expand or spread an array or Object.

Q22. What are the types of Conditional Rendering in JSX?
Ans: 1. if/else statements
     2. Ternary operator
     3. && operator
     4. Switch statement

Q23. What is Transpiler? What is the difference between Compiler & Transpiler?
Ans: Transpiler - A Transpiler is a tool that converts source code from one high-level programming language(JSX) to another high-level programming language(JavaScript). Example - Bable

Compiler - A compiler is a tool that converts high-level programming language(java) into a lower-level language (machine code or bytecode).


Q24. What is map() method?
Ans: Map() method allows you to iterateover an array amd modifyed its elements using a callback function. 
    Syntax: Arr.map((number)=>(number*2))

Q25. What are the React components? What are the main elements of it?
Ans: In React, a component is a reusable building block for creating user interfaces.
     Main components: import statements, functional component defination, JSX and export statement. 
    
Q26. What are types of components? What is functional component?
Ans: 1. Functional components are declared as a JavaScript function. 
    2. They are stateless components, but with the help of hooks, they can now manage state also.

Q27. How do we pass the data between functional components in React?
Ans: Props (properties) are a way to pass data from a patent component to a child component.

Q28. What is Prop Drilling in React?
Ans: Prop drilling is the process of passing down props through multiple layers of component.

Q30. Why should we avoid prop drilling? In how many ways can avoid Prop Drilling?
Ans: Reasons to avoid:
     1. Maintenance: Prop Drilling can make code harder to maintain as changes in data flow require updates across multiple components.
     2. Complexity: it increases code Complexity and reduces code readability.
     3. Debugging: Debugging becomes challenging when props need to be traced through nymerous components.

     5 ways to avoid Prop Drilling
     1. Using Context API
     2. Using Redux
     3. Using Component Composition
     4. Using Callback functions
     5. Using Custom hooks
    
Q31. What are Class Components In React? 
Ans: 1. Class components are defined using JavaScript classes. 
     2. They are statefull components by using the lifecycle methods. 
     3. The render method in a class Component is responsible fot returning JSX. 

     Sysntex: 

     Import React, {Component} from "react;
     
     class AppClass extends Component {
        render(){
            return <h1>Interview Happy</h1>;
        }
     }

     export default AppClass;

Q32. What are the 5 differences b/w functional ans class Components?
Ans: Functional Component:
     1. Syntax: Defined as a JS function.
     2. State: Originally stateless but can now maintain state unsing hooks.
     3. Lifecycle methods: No
     4. Readability: More readable & concise.
     5. this keyword: No
     6. Do not have render method. 

     Class component:
     1. Defined as a JS(ES6) class.
     2. Can manage local state with this.state
     3. NO lifecycle method
     4. Verbose(Complex) code
     5. Yes (Access prop using this.prop)
     6. Have render method.

Q33. What is Routing and Router in React?
Ans: Routing - Allows you to create a single-page web application with navigation, without the need for a full-page refresh.

    Router - React Router is a library for handling routing and enables navigation and rendring of different components based on the URL.





